<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.crap.dao.mybatis.MenuDao" >
  <resultMap id="BaseResultMap" type="cn.crap.model.Menu" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="menuName" property="menuName" jdbcType="VARCHAR" />
    <result column="menuUrl" property="menuUrl" jdbcType="VARCHAR" />
    <result column="roleIds" property="roleIds" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="VARCHAR" />
    <result column="iconRemark" property="iconRemark" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, menuName, menuUrl, roleIds, parentId, iconRemark, type, createTime, status, sequence
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.crap.model.MenuCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != null and limitStart != -1 and maxResults != null and maxResults != -1" >
        limit ${limitStart} , ${maxResults}
      </when>
      <when test="limitStart != null and limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from menu
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.crap.model.MenuCriteria" >
    delete from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.crap.model.Menu" >
    insert into menu (id, menuName, menuUrl,
      roleIds, parentId, iconRemark, 
      type, createTime, status, 
      sequence)
    values (#{id,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, 
      #{roleIds,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{iconRemark,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{sequence,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.crap.model.Menu" >
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="menuName != null" >
        menuName,
      </if>
      <if test="menuUrl != null" >
        menuUrl,
      </if>
      <if test="roleIds != null" >
        roleIds,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="iconRemark != null" >
        iconRemark,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null" >
        #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="iconRemark != null" >
        #{iconRemark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.crap.model.MenuCriteria" resultType="java.lang.Integer" >
    select count(*) from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update menu
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null" >
        menuName = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null" >
        menuUrl = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.roleIds != null" >
        roleIds = #{record.roleIds,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parentId = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.iconRemark != null" >
        iconRemark = #{record.iconRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update menu
    set id = #{record.id,jdbcType=VARCHAR},
      menuName = #{record.menuName,jdbcType=VARCHAR},
      menuUrl = #{record.menuUrl,jdbcType=VARCHAR},
      roleIds = #{record.roleIds,jdbcType=VARCHAR},
      parentId = #{record.parentId,jdbcType=VARCHAR},
      iconRemark = #{record.iconRemark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      sequence = #{record.sequence,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.crap.model.Menu" >
    update menu
    <set >
      <if test="menuName != null" >
        menuName = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        menuUrl = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null" >
        roleIds = #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="iconRemark != null" >
        iconRemark = #{iconRemark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.crap.model.Menu" >
    update menu
    set menuName = #{menuName,jdbcType=VARCHAR},
      menuUrl = #{menuUrl,jdbcType=VARCHAR},
      roleIds = #{roleIds,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=VARCHAR},
      iconRemark = #{iconRemark,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      sequence = #{sequence,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>