<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.crap.dao.mybatis.ArticleDao" >
  <resultMap id="BaseResultMap" type="cn.crap.model.Article" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="click" property="click" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="moduleId" property="moduleId" jdbcType="VARCHAR" />
    <result column="mkey" property="mkey" jdbcType="VARCHAR" />
    <result column="canDelete" property="canDelete" jdbcType="TINYINT" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="canComment" property="canComment" jdbcType="TINYINT" />
    <result column="commentCount" property="commentCount" jdbcType="INTEGER" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="VARCHAR" />
    <result column="attributes" property="attributes" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.crap.model.ArticleWithBLOBs" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="markdown" property="markdown" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, brief, click, type, status, createTime, moduleId, mkey, canDelete, category, 
    canComment, commentCount, sequence, projectId, attributes
  </sql>
  <sql id="Blob_Column_List" >
    content, markdown
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.crap.model.ArticleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.crap.model.ArticleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != null and limitStart != -1 and maxResults != null and maxResults != -1" >
        limit ${limitStart} , ${maxResults}
      </when>
      <when test="limitStart != null and limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.crap.model.ArticleCriteria" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.crap.model.ArticleWithBLOBs" >
    
      
    
    insert into article (id, name, brief, 
      click, type, status, 
      createTime, moduleId, mkey, 
      canDelete, category, canComment, 
      commentCount, sequence, projectId, 
      content, markdown, attributes)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, 
      #{click,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{moduleId,jdbcType=VARCHAR}, #{mkey,jdbcType=VARCHAR}, 
      #{canDelete,jdbcType=TINYINT}, #{category,jdbcType=VARCHAR}, #{canComment,jdbcType=TINYINT}, 
      #{commentCount,jdbcType=INTEGER}, #{sequence,jdbcType=INTEGER}, #{projectId,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{markdown,jdbcType=LONGVARCHAR}, #{attributes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.crap.model.ArticleWithBLOBs" >
    
      
    
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="name != null" >
        name,
      </if>
      <if test="brief != null" >
        brief,
      </if>
      <if test="click != null" >
        click,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="moduleId != null" >
        moduleId,
      </if>
      <if test="mkey != null" >
        mkey,
      </if>
      <if test="canDelete != null" >
        canDelete,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="canComment != null" >
        canComment,
      </if>
      <if test="commentCount != null" >
        commentCount,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="markdown != null" >
        markdown,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="click != null" >
        #{click,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="mkey != null" >
        #{mkey,jdbcType=VARCHAR},
      </if>
      <if test="canDelete != null" >
        #{canDelete,jdbcType=TINYINT},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="canComment != null" >
        #{canComment,jdbcType=TINYINT},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown != null" >
        #{markdown,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.crap.model.ArticleCriteria" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null" >
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.click != null" >
        click = #{record.click,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moduleId != null" >
        moduleId = #{record.moduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.mkey != null" >
        mkey = #{record.mkey,jdbcType=VARCHAR},
      </if>
      <if test="record.canDelete != null" >
        canDelete = #{record.canDelete,jdbcType=TINYINT},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.canComment != null" >
        canComment = #{record.canComment,jdbcType=TINYINT},
      </if>
      <if test="record.commentCount != null" >
        commentCount = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null" >
        projectId = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.markdown != null" >
        markdown = #{record.markdown,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attributes != null" >
        attributes = #{record.attributes,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      click = #{record.click,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      moduleId = #{record.moduleId,jdbcType=VARCHAR},
      mkey = #{record.mkey,jdbcType=VARCHAR},
      canDelete = #{record.canDelete,jdbcType=TINYINT},
      category = #{record.category,jdbcType=VARCHAR},
      canComment = #{record.canComment,jdbcType=TINYINT},
      commentCount = #{record.commentCount,jdbcType=INTEGER},
      sequence = #{record.sequence,jdbcType=INTEGER},
      projectId = #{record.projectId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      markdown = #{record.markdown,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      click = #{record.click,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      moduleId = #{record.moduleId,jdbcType=VARCHAR},
      mkey = #{record.mkey,jdbcType=VARCHAR},
      canDelete = #{record.canDelete,jdbcType=TINYINT},
      category = #{record.category,jdbcType=VARCHAR},
      canComment = #{record.canComment,jdbcType=TINYINT},
      commentCount = #{record.commentCount,jdbcType=INTEGER},
      sequence = #{record.sequence,jdbcType=INTEGER},
      projectId = #{record.projectId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.crap.model.ArticleWithBLOBs" >
    update article
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="click != null" >
        click = #{click,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleId != null" >
        moduleId = #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="mkey != null" >
        mkey = #{mkey,jdbcType=VARCHAR},
      </if>
      <if test="canDelete != null" >
        canDelete = #{canDelete,jdbcType=TINYINT},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="canComment != null" >
        canComment = #{canComment,jdbcType=TINYINT},
      </if>
      <if test="commentCount != null" >
        commentCount = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown != null" >
        markdown = #{markdown,jdbcType=LONGVARCHAR},
      </if>
      <if test="attributes != null" >
        attributes = #{attributes,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.crap.model.ArticleWithBLOBs" >
    update article
    set name = #{name,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      moduleId = #{moduleId,jdbcType=VARCHAR},
      mkey = #{mkey,jdbcType=VARCHAR},
      canDelete = #{canDelete,jdbcType=TINYINT},
      category = #{category,jdbcType=VARCHAR},
      canComment = #{canComment,jdbcType=TINYINT},
      commentCount = #{commentCount,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      markdown = #{markdown,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.crap.model.Article" >
    update article
    set name = #{name,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      moduleId = #{moduleId,jdbcType=VARCHAR},
      mkey = #{mkey,jdbcType=VARCHAR},
      canDelete = #{canDelete,jdbcType=TINYINT},
      category = #{category,jdbcType=VARCHAR},
      canComment = #{canComment,jdbcType=TINYINT},
      commentCount = #{commentCount,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
